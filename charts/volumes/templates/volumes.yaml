{{- if .Values.createStorageClass -}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
  annotations: {
    "storageclass.kubernetes.io/is-default-class": "true"
  }
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
{{- end}}
{{- range $index, $node := .Values.nodes -}}
{{- range $k, $volume := $.Values.volumes }}
{{- range $index, $e := until ($volume.replicationPerNode |int) }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ $volume.type | lower }}-{{ $index }}-pv-{{ $.Values.global.env }}-{{ $node }}
  namespace: infra
  labels:
    type: {{ $volume.type | quote }}
    env: {{ $.Values.global.env | quote }}
    application: {{ $.Values.global.applicationName | quote }}
    node: {{ $node | quote }}
spec:
  capacity:
    storage: {{ $volume.capacity }}
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
{{- if eq $.Values.global.env "local" }}
  hostPath:
    path: {{ $.Values.basePath }}/{{ $.Values.global.env }}/{{ $.Values.global.applicationName }}/{{ $volume.type }}-{{ $index }}
{{- else }}
  local:
    path: {{ $.Values.basePath }}/{{ $.Values.global.env }}/{{ $.Values.global.applicationName }}/{{ $volume.type }}-{{ $index }}
{{- end }}
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - {{ $node }}
{{- end }}
{{- end }}
{{- end }}
